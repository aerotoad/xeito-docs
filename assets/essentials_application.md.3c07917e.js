import{_ as s,c as n,o as a,a as o}from"./app.d6637636.js";const C=JSON.parse('{"title":"Creating a Xeito Application","description":"","frontmatter":{},"headers":[{"level":2,"title":"The application instance","slug":"the-application-instance","link":"#the-application-instance","children":[]},{"level":2,"title":"The root Component","slug":"the-root-component","link":"#the-root-component","children":[]},{"level":2,"title":"Bootstrapping the application","slug":"bootstrapping-the-application","link":"#bootstrapping-the-application","children":[]}],"relativePath":"essentials/application.md"}'),e={name:"essentials/application.md"},p=o(`<h1 id="creating-a-xeito-application" tabindex="-1">Creating a Xeito Application <a class="header-anchor" href="#creating-a-xeito-application" aria-hidden="true">#</a></h1><h2 id="the-application-instance" tabindex="-1">The application instance <a class="header-anchor" href="#the-application-instance" aria-hidden="true">#</a></h2><p>A Xeito application starts by creating a new instance of <code>Xeito</code>:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Xeito</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@xeito/core</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Xeito</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="the-root-component" tabindex="-1">The root Component <a class="header-anchor" href="#the-root-component" aria-hidden="true">#</a></h2><p>The <code>Xeito()</code> consctructor requires a single argument, the root component of your application. Every app requires a root component, which is the first component to be rendered when the application starts and will contain other components as children.</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Xeito</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@xeito/core</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">AppComponent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./app.component</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> app </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Xeito</span><span style="color:#A6ACCD;">(AppComponent)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Many of the examples in this guide only use a single component, but in a real application you will have many components, each one with its own responsibilities. These components will be organized in a tree-like structure, with the root component at the top and other components as children. An example component structure of an application might look like this:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">AppComponent (root component)</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500 LoginPage</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u2514\u2500 LoginForm</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u2502   \u251C\u2500 UsernameInput</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u2502   \u2514\u2500 PasswordInput</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u2514\u2500 LoginButton</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500 Dashboard</span></span>
<span class="line"><span style="color:#A6ACCD;">   \u251C\u2500 UserProfile</span></span>
<span class="line"><span style="color:#A6ACCD;">   \u2514\u2500 UserMessages</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Later we will see how to compose multiple components together to build a complex UI and how to use the Xeito router to navigate between different views, but for now we will start with a simple component and what happens inside of it.</p><h2 id="bootstrapping-the-application" tabindex="-1">Bootstrapping the application <a class="header-anchor" href="#bootstrapping-the-application" aria-hidden="true">#</a></h2><p>The <code>Xeito()</code> constructor will create a new instance of the application, but it won&#39;t start it or render anything on the screen until the <code>.bootstrap()</code> method is called. It expects a single argument, which can be either a DOM element or a CSS selector string.</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">root</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bootstrap</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">#root</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// or app.bootstrap(document.getElementById(&#39;app&#39;));</span></span>
<span class="line"></span></code></pre></div><p>The content of the root component will be rendered inside of the DOM element that was passed to the <code>.bootstrap()</code> method.</p><p>The <code>.bootstrap()</code> method should always be called after all the app configuration is done, like registering plugins (more on this later).</p>`,16),t=[p];function l(c,r,i,D,y,d){return a(),n("div",null,t)}const F=s(e,[["render",l]]);export{C as __pageData,F as default};
